# two-pointer
https://www.youtube.com/watch?v=cQ1Oz4ckceM
class Solution:
    def twoSum(self, numbers, target):
        l, r = 0, len(numbers)-1
        while l < r:
            s = numbers[l] + numbers[r]
            if s == target:
                return [l+1, r+1]
            elif s < target:
                l += 1
            else:
                r -= 1
# Two pointers: O(n) time and O(1) space

class Solution:
    def twoSum(self, numbers, target):
        l, r = 0, len(numbers)-1
        while l< r:
            s= numbers[l]+ numbers[r]
            if s==target:
                return [l+1, r+1]
            elif s< target:
                l+=1
            else:
                r-=1
                

class Solution:
    def twoSum(self, numbers, target):
        l, r= 0, len(numbers)-1
        while l< r:
            s= numbers[l]+ numbers[r]
            if s== target:
                return [l+1, r+1]
            elif s< target:
                l+=1
            else:
                r-=1

class Solution:
    def twoSum(self, numbers, target):
        l, r= 0, len(numbers)-1
        while l<r:
            s= numbers[l]+ numbers[r]
            if s== target:
                return [l+1, r+1]
            elif s< target:
                l+=1
            else: r-=1


class Solution:
    def twoSum(self, numbers, target):
        l, r =0, len(numbers)-1
        while l< r:
            s=numbers[l]+ numbers[r]
            if s== target:
                return[l+1, r+1]
            elif s< target:
                l+= 1
            else:
                r-=1
